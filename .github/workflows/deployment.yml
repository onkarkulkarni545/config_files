name: GitOps-Pipeline with ArgoCD

on: 
    push:
        branches: 
            - release
        
env: 
    PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
    ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
    ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
    GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
    GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
    
jobs:
    deploy:
        runs-on: ubuntu-latest
        steps: 
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                fetch-depth: 0  # get all history of all branches and tags

            - name: Install kubectl
              run: |
                  curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.7/2024-12-12/bin/linux/amd64/kubectl
                  chmod +x ./kubectl
                  sudo mv ./kubectl /usr/local/bin/kubectl

            - name: Update Rollout image tag
              run: |
                 sed -i "s#docker.io.*/my-app:.*#docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-app:${IMAGE_TAG}#g" rollout.yml
                 git config --global user.name "${{ secrets.GIT_USERNAME }}"
                  git config --global user.email "${{ secrets.GIT_EMAIL }}"
                 git add rollout.yml
                 git commit -m "Update rollout image to $IMAGE_TAG"
                 git push origin release

            - name: Install ArgoCD CLI
              run: | 
                  curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
                  chmod +x argocd
                  sudo mv argocd /usr/local/bin/argocd

            - name: Login to ArgoCD
              run: |
                argocd login ${{ secrets.ARGOCD_SERVER }} \
                    --username ${{ secrets.ARGOCD_USERNAME }} \
                    --password ${{ secrets.ARGOCD_PASSWORD }} \
                    --insecure --grpc-web
                    

            - name: Refresh ArgoCD App and Sync
              run: argocd app sync demo-release   
